# osbuild - Export structured data to streamline
# the creation of operating system images

%osbuild_useradd(n:S:c:d:g:G:lmMNors:u:UZ:) %{lua:
    -- -n package name
    -- -S subpackage name
    -- -* useradd options
\
    local package = rpm.expand("%{?-S*}")
    local name = rpm.expand("%{?!-n*:%{name}}%{?-n*}")
    if package ~= "" then
        name = name .. "_" .. package
    end
\
    local user = rpm.expand("%{1}")
    local users = rpm.expand("%{?osbuild_useradd_" .. name .. "_users}")
    rpm.define("osbuild_useradd_" .. name .. "_users " .. users .. " " .. user)
\
    local group = rpm.expand("%{?-g*}")
    if group ~= "" then
        rpm.define("osbuild_useradd_" .. name .. "_" .. user .. "_group " .. group)
    end
    local gecko = rpm.expand("%{?-c*}")
    if gecko ~= "" then
        rpm.define("osbuild_useradd_" .. name .. "_" .. user .. "_gecko " .. gecko)
    end
    local home = rpm.expand("%{?-d*}")
    if home ~= "" then
        rpm.define("osbuild_useradd_" .. name .. "_" .. user .. "_home " .. home)
    end
    local shell = rpm.expand("%{?-s*}")
    if shell ~= "" then
        rpm.define("osbuild_useradd_" .. name .. "_" .. user .. "_shell " .. shell)
    end
    local uid = rpm.expand("%{?-u*}")
    if uid ~= "" then
        rpm.define("osbuild_useradd_" .. name .. "_" .. user .. "_uid " .. uid)
    end
    local groups = rpm.expand("%{?-G*}")
    if groups ~= "" then
        rpm.define("osbuild_useradd_" .. name .. "_" .. user .. "_groups " .. groups)
    end
\
    print("Requires(pre): " .. rpm.expand("%{_sbindir}/useradd") .. "\\n")
    print("Provides: user(" .. user .. ")\\n")
}

%osbuild_groupadd(n:S:g:rfoB:N:) %{lua:
    -- -n package name
    -- -S subpackage name
    -- -* groupadd options
\
    local package = rpm.expand("%{?-S*}")
    local name = rpm.expand("%{?!-n*:%{name}}%{?-n*}")
    if package ~= "" then
        name = name .. "_" .. package
    end
\
    local group = rpm.expand("%{1}")
    local groups = rpm.expand("%{?osbuild_groupadd_" .. name .. "_groups}")
    rpm.define("osbuild_groupadd_" .. name .. "_groups " .. groups .. " " .. group)
\
    local gid = rpm.expand("%{?-g*}")
    if gid ~= "" then
        rpm.define("osbuild_groupadd_" .. name .. "_gid " .. gid)
    end
\
    print("Requires(pre): " .. rpm.expand("%{_sbindir}/groupadd") .. "\\n")
    print("Provides: group(" .. group .. ")\\n")
}

%osbuild_pre(n:S:) %{lua:
    -- -n package name
    -- -S subpackage name
\
    local package = rpm.expand("%{?-S*}")
    local name = rpm.expand("%{?!-n*:%{name}}%{?-n*}")
    local filename = name
    if package ~= "" then
        filename = name .. "-" .. package
        name = name .. "_" .. package
    end
\
    local users = rpm.expand("%{?osbuild_useradd_" .. name .. "_users}")
    for user in users:gmatch("%w+") do
        print(rpm.expand("%{_sbindir}/useradd ") .. user .. "\\n")
    end
\
    local groups = rpm.expand("%{?osbuild_groupadd_" .. name .. "_groups}")
    for group in groups:gmatch("%w+") do
        print(rpm.expand("%{_sbindir}/groupadd ") .. group .. "\\n")
    end
}

%osbuild_install(n:S:) %{lua:
    -- -n package name
    -- -S subpackage name
\
    local package = rpm.expand("%{?-S*}")
    local name = rpm.expand("%{?!-n*:%{name}}%{?-n*}")
    local filename = name
    if package ~= "" then
        filename = name .. "-" .. package
        name = name .. "_" .. package
    end
\
    print("mkdir -p " .. rpm.expand("%{buildroot}%{_datarootdir}/osbuild") .. "\\n")
    print("cat >" .. rpm.expand("%{buildroot}%{_datarootdir}/osbuild/") .. filename .. ".json <<EOF\\n")
    print("{\\n")
    print("  \\"name\\": \\"" .. name .. "\\"")
\
    local users = rpm.expand("%{?osbuild_useradd_" .. name .. "_users}")
    if users ~= "" then
        print(",\\n")
        print("  \\"users\\": [\\n")
        local first = true
        for user in users:gmatch("%w+") do
            if not first then
              print(",")
            end
            first = false
            print("\\n")
            print("    {\\n")
            print("      \\"name\\": \\"" .. user .. "\\"")
            local uid = rpm.expand("%{?osbuild_useradd_" .. name .. "_" .. user .. "_uid}")
            if uid ~= "" then
                print(",\\n")
                print("      \\"uid\\": " .. uid)
            end
            print("\\n")
            print("    }")
        end
        print("\\n")
        print("  ]")
    end
\
    local groups = rpm.expand("%{?osbuild_groupadd_" .. name .. "_groups}")
    if groups ~= "" then
        print(",\\n")
        print("  \\"groups\\": [\\n")
        local first = true
        for group in groups:gmatch("%w+") do
            if not first then
              print(",")
            end
            first = false
            print("\\n")
            print("    {\\n")
            print("      \\"name\\": \\"" .. group .. "\\"")
            local gid = rpm.expand("%{?osbuild_groupadd_" .. name .. "_" .. group .. "_gid}")
            if gid ~= "" then
                print(",\\n")
                print("      \\"gid\\": " .. gid)
            end
            print("\\n")
            print("    }")
        end
        print("\\n")
        print("  ]")
    end
\
    print("\\n")
    print("}\\n")
    print("EOF\\n")
}

%osbuild_files(n:S:) %{lua:
    -- -n package name
    -- -S subpackage name
\
    local package = rpm.expand("%{?-S*}")
    local name = rpm.expand("%{?!-n*:%{name}}%{?-n*}")
    local filename = name
    if package ~= "" then
       filename = name .. "-" .. package
       name = name .. "_" .. package
    end
\
    print(rpm.expand("%{_datarootdir}/osbuild/") .. filename .. ".json\\n")
}
